// copy image data into mipmap texture_______________________________________________________________


		////ID3D11Texture2D* image = TextureMgr::Instance()->GetTexture("grass.jpg"); // it is just my custom function that read texture from file and return resource of it.
		//pResource;
		//ID3D11Texture2D* tex = nullptr; // FIRST generate mipmap texture________________________________
		//D3D11_TEXTURE2D_DESC texDesc;
		//image->GetDesc(&texDesc);
		//texDesc.BindFlags = D3D11_BIND_SHADER_RESOURCE | D3D11_BIND_RENDER_TARGET;
		//texDesc.CPUAccessFlags = 0;
		//texDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;
		//texDesc.MipLevels = 7;
		//texDesc.MiscFlags = D3D11_RESOURCE_MISC_GENERATE_MIPS;
		//texDesc.Usage = D3D11_USAGE_DEFAULT;
		//r_assert(device->CreateTexture2D(&texDesc, nullptr, &tex));

		//ID3D11Texture2D* stagTex; // create Staging texture_____________________________________
		//D3D11_TEXTURE2D_DESC stagDesc;
		//image->GetDesc(&stagDesc);
		//stagDesc.ArraySize = 1;
		//stagDesc.BindFlags = 0;
		//stagDesc.CPUAccessFlags = D3D11_CPU_ACCESS_READ;
		//stagDesc.MipLevels = 1;
		//stagDesc.MiscFlags = 0;
		//stagDesc.Usage = D3D11_USAGE_STAGING;
		//r_assert(device->CreateTexture2D(&stagDesc, nullptr, &stagTex));

		//// read from image_________________________________________________________________________
		//graphic->DContext()->CopyResource(stagTex, image);
		//D3D11_MAPPED_SUBRESOURCE mapped;
		//r_assert(graphic->DContext()->Map(stagTex, 0, D3D11_MAP_READ, 0, &mapped));
		//UINT* arr = new UINT[(mapped.RowPitch / (float)sizeof(UINT)) * stagDesc.Height];
		//ZeroMemory(arr, mapped.RowPitch * stagDesc.Height);
		//CopyMemory(arr, mapped.pData, mapped.RowPitch * stagDesc.Height);
		//graphic->DContext()->Unmap(stagTex, 0);

		//// copy image data into mipmap texture_______________________________________________________________
		//graphic->DContext()->UpdateSubresource(tex, 0, &CD3D11_BOX(0, 0, 0, stagDesc.Width, stagDesc.Height, 1), arr, mapped.RowPitch, mapped.DepthPitch);

		//// create SRV of mipmap texture______________________________________________________________
		//D3D11_SHADER_RESOURCE_VIEW_DESC srvDesc;
		//srvDesc.Format = texDesc.Format;
		//srvDesc.ViewDimension = D3D11_SRV_DIMENSION_TEXTURE2D;
		//srvDesc.Texture2D.MipLevels = texDesc.MipLevels;
		//srvDesc.Texture2D.MostDetailedMip = 0;
		//r_assert(device->CreateShaderResourceView(tex, &srvDesc, &srv));
		//graphic->DContext()->GenerateMips(srv);
