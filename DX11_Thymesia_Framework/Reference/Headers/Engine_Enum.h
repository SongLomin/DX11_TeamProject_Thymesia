#pragma once

enum class RENDERGROUP { 
	RENDER_PRIORITY, 
	RENDER_AFTER_PRIORITY, 
	RENDER_SHADOWDEPTH,
	RENDER_STATICSHADOWDEPTH,
	RENDER_NONALPHABLEND, 
	RENDER_NONLIGHT, 
	RENDER_ALPHABLEND, 
	RENDER_DISTORTION,
	RENDER_BEFOREUI, 
	RENDER_UI, 
	RENDER_AFTER_UI, 
	RENDER_AFTER_POSTPROCESS,
	RENDER_AFTER_POSTPROCESS_EFFECT,
	RENDER_FINAL,
	RENDER_END 
};
enum class MEMORY_TYPE { MEMORY_STATIC = 0, MEMORY_DYNAMIC, MEMORY_END };
enum class KEY_STATE {
	TAP, // 막 누른 시점
	HOLD,// 꾹 누르고 있음
	AWAY,// 막 뗀 시점
	NONE,// 걍 안눌린 상태
};
enum class KEY
{
	LEFT = 0,
	RIGHT,
	UP,
	DOWN,
	NUM1, NUM2, NUM3, NUM4, NUM5, NUM6, NUM7, NUM8, NUM9, NUM0,
	NUMPAD1, NUMPAD2, NUMPAD3, NUMPAD4, NUMPAD5,
	NUMPAD6, NUMPAD7, NUMPAD8, NUMPAD9, NUMPAD0,
	F1, F2, F3, F4, F5,
	Q, W, E, R, T, Y, U, I, O, P,
	A, S, D, F, G, H, J, K, L,
	Z, X, C, V, B, N, M,
	ALT,
	LSHIFT,
	SPACE,
	CTRL,
	ENTER,
	ESC,
	TAB,
	LBUTTON,
	RBUTTON,
	BACKSPACE,
	DELETEKEY,
	LAST,
};

enum class MODEL_TYPE { NONANIM = 0, ANIM, NAVI, GROUND, TYPE_END };

enum class COLLISION_TYPE { SPHERE = 0, AABB, OBB, TYPE_END };

enum class LINEAR_TYPE { LNIEAR, SQRT, POW, POLY, TYPE_END };
enum FADER_TYPE
{
	FADER_OUT,
	FADER_IN,
	FADER_OUTINLOOPING,
	FADER_INOUTLOOPING,
	FADER_END
};

enum class INTERPOLATION
{
	LINEAR,
	SQRT,
	POW,
	INTERPOLATION_END
};

enum CHANNELID { BGM, ENVIRONMENT, PLAYER, PLAYERBULLET, EFFECT, EFFECT2, UI, SYSTEM_EFFECT, SYSTEM_EFFECT2, SYSTEM_EFFECT3, MAXCHANNEL };

enum class PHYSXCOLLIDER_TYPE
{
	SPHERE,
	BOX,
	CYLINDER,
	CONVEXMESH,
	MESH,
	MODEL,
	CONVEXMODEL,
	TYPE_END
};

enum class PHYSXACTOR_TYPE
{
	DYNAMIC,
	YFIXED_DYNAMIC,
	STATIC,
	ZONE,
	TYPE_END
};

enum class THREAD_TYPE
{
	NONE,
	TICK,
	LATE_TICK,
	CUSTOM_THREAD0,
	CUSTOM_THREAD1,
	CUSTOM_THREAD2,
	CUSTOM_THREAD3,
	TYPE_END
};

enum class EASING_TYPE
{
	LINEAR

	, QUAD_IN , QUAD_OUT ,QUAD_INOUT
	, CUBIC_IN, CUBIC_OUT, CUBIC_INOUT
	, QUART_IN, QUART_OUT, QUART_INOUT
	, QUINT_IN, QUINT_OUT, QUINT_INOUT
	, SINE_IN, SINE_OUT, SINE_INOUT
	, EXPO_IN, EXPO_OUT, EXPO_INOUT
	, CIRC_IN, CIRC_OUT, CIRC_INOUT
	, ELASTIC_IN, ELASTIC_OUT, ELASTIC_INOUT
	, BOUNCE_IN, BOUNCE_OUT

	, TYPE_END
};
